# 将静态内容部署到 GitHub Pages 的工作流程 适用于web
name: GitHub Pages Deploy

on:
  # push:
    # branches: ['main']
  # 手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: read

# 允许一个并发的部署，取消进行中的部署
concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  # 代码质量检查
  quality-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      # - name: 运行代码检查
      #   run: pnpm run lint:check

  # 构建和部署
  deploy:
    # 仅在推送到main分支或手动触发时运行
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          # 获取完整历史用于更好的缓存
          fetch-depth: 0

      - name: 设置 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 获取 pnpm 存储目录
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 设置 pnpm 缓存
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 运行代码检查
        run: pnpm run lint:check

      - name: 构建应用
        run: pnpm run build:github
        env:
          VITE_BASE_URL: /PureChat/

      - name: 验证构建输出
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build failed: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Build failed: index.html not found in dist"
            exit 1
          fi
          echo "✅ Build verification passed"
          ls -la dist/

      - name: 设置 Pages
        uses: actions/configure-pages@v4

      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 部署状态
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful!"
            echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi