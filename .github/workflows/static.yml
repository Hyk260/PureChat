# Â∞ÜÈùôÊÄÅÂÜÖÂÆπÈÉ®ÁΩ≤Âà∞ GitHub Pages ÁöÑ‰ºòÂåñÂ∑•‰ΩúÊµÅÁ®ã
name: Deploy to GitHub Pages

on:
  # ‰ªÖÂú®Êé®ÈÄÅÂà∞ÈªòËÆ§ÂàÜÊîØÊó∂ËøêË°å
  push:
    branches: ['main']
  # ÊâãÂä®Ëß¶ÂèëÂ∑•‰ΩúÊµÅ
  workflow_dispatch:
  # Âú®PRÊó∂ËøêË°åÊ£ÄÊü•‰ΩÜ‰∏çÈÉ®ÁΩ≤
  pull_request:
    branches: ['main']

# ËÆæÁΩÆ GITHUB_TOKEN ÁöÑÊùÉÈôê
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: read

# ÂÖÅËÆ∏‰∏Ä‰∏™Âπ∂ÂèëÁöÑÈÉ®ÁΩ≤ÔºåÂèñÊ∂àËøõË°å‰∏≠ÁöÑÈÉ®ÁΩ≤
concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  # ‰ª£Á†ÅË¥®ÈáèÊ£ÄÊü•
  quality-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint:check

      - name: Run tests
        run: pnpm run test

  # ÊûÑÂª∫ÂíåÈÉ®ÁΩ≤
  deploy:
    # ‰ªÖÂú®Êé®ÈÄÅÂà∞mainÂàÜÊîØÊàñÊâãÂä®Ëß¶ÂèëÊó∂ËøêË°å
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Ëé∑ÂèñÂÆåÊï¥ÂéÜÂè≤Áî®‰∫éÊõ¥Â•ΩÁöÑÁºìÂ≠ò
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint:check

      - name: Build application
        run: pnpm run build:github
        env:
          VITE_BASE_URL: /PureChat/

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Build failed: index.html not found in dist"
            exit 1
          fi
          echo "‚úÖ Build verification passed"
          ls -la dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
            echo "üåê Site URL: ${{ steps.deployment.outputs.page_url }}"
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi